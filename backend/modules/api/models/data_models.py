from flask_restx import Namespace, fields

dataset_api = Namespace(
    "datasets", description="All operations regarding available datasets"
)

position_field = dataset_api.model(
    "Position",
    {
        "x": fields.Float(
            required=True,
            description="The x position of comment generated by dimension reduction algorithm",
        ),
        "y": fields.Float(
            required=True,
            description="The y position of comment generated by dimension reduction algorithm",
        ),
    },
)

class_field = dataset_api.model(
    "Class",
    {
        "assigned": fields.Boolean(
            required=True, description="Was the comment classified in this class?"
        ),
        "prediction": fields.Float(
            required=True, description="Prediction given from model in %"
        ),
    },
)

classification_field = dataset_api.model(
    "Classification",
    {
        "toxic": fields.Nested(class_field),
        "severeToxic": fields.Nested(class_field),
        "obscene": fields.Nested(class_field),
        "threat": fields.Nested(class_field),
        "insult": fields.Nested(class_field),
        "identityHate": fields.Nested(class_field),
    },
)

data_point_model = dataset_api.model(
    "DataPoint",
    {
        "text": fields.String(
            required=True, description="The actual text that was classified"
        ),
        "position": fields.Nested(position_field),
        "classification": fields.Nested(classification_field),
    },
)

dataset_model = dataset_api.model(
    "Dataset",
    {
        "name": fields.String(required=True, description="Name of the dataset"),
        "samplesCount": fields.Integer(
            allow_null=True,
            description="Total number of samples in the dataset, If dataset isn't loaded will be null",
        ),
        "availableReductionModels": fields.List(
            fields.String,
            description="List of available reduction algo for given dataset",
        ),
    },
)
